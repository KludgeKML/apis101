{
  "openapi": "3.0.0",
  "info": {
    "title": "APIs 101 API",
    "description": "This is version 1 of the API based on the OpenAPI 3.1 specification.",
    "version": "1.0.1"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://apis101.kludge.co.uk/api/v1"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "An individual member of the organisation"
    },
    {
      "name": "groups",
      "description": "A group with many users and roles"
    },
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get users",
        "operationId": "getUsers",
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "examples": [
                          10
                        ]
                      },
                      "name": {
                        "type": "string",
                        "examples": [
                          "Joe Bloggs"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "Joe Bloggs"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "examples": [
                        10
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "Joe Bloggs"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by id",
        "description": "",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched. Use 1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "examples": [
                        10
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "Joe Bloggs"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user_id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "examples": [
                      10
                    ]
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "Joe Bloggs"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}/groups/{group_id}": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Add group to user",
        "operationId": "addGroupToUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id for user to add group to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "id for group to add user to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }          
        ],        
        "responses": {
          "default": {
            "description": "successful operation",
          },
          "404": {
            "description": "User or Group not found"
          }
        }
      }    
    },
    "/tokens": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Create token",
        "operationId": "createToken",
        "requestBody": {
          "description": "Create new authorization token",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "created_for": {
                    "type": "string",
                    "examples": [
                      "Joe Bloggs"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "examples": [
                        "Token generated at 2023-11-01 20:49:14 UTC"
                      ]
                    },
                    "jwt": {
                      "type": "string",
                      "examples": [
                        "eyJhbGciOiJIUzI1NiJ9.eyJzb3VyY2UiOiJJIG1hZGUgdGhpcyJ9.xVxd6bE1tepoo2uNu135_LnSyVAk-NYjbxdNd41EfV8"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }      
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "examples": [
              10
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Joe Bloggs"
            ]
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
      }
    }
  }
}